<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>wang-utils</artifactId>
        <groupId>cn.wang.custom</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>web-api</artifactId>

    <!--maven文档项目名-->
    <name>web-api</name>
    <!--maven文档项目描述-->
    <description>微服务基础组件模板</description>
    <packaging>jar</packaging>
    <!--项目全局自定义属性列表-->
    <properties>
        <name>web-api</name>
        <!--自定义属性java.version,值1.8-->
        <java.version>1.8</java.version>
        <env>local</env>
    </properties>

    <!--第三方jar依赖列表-->
    <dependencies>


        <!--        启用bootstrap-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>
        <!-- SpringCloud Loadbalancer -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-loadbalancer</artifactId>
        </dependency>
        <!-- SpringCloud Alibaba Nacos discovery -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
            <exclusions>
                <!-- 将ribbon排除 -->
                <exclusion>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- SpringCloud Alibaba Nacos Config -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>

        <!-- SpringBoot Actuator -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.gwenn</groupId>
            <artifactId>sqlite-dialect</artifactId>
            <version>0.1.0</version>
        </dependency>

        <dependency>
            <groupId>cn.wang.custom</groupId>
            <artifactId>spring-boot-utils</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>cn.wang.custom</groupId>
            <artifactId>common-utils</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

    </dependencies>

    <!--打包子选项配置列表-->
    <profiles>

        <!--单个子选项配置 可以使用全局配置所有标签，并在启用后相冲突时优先级高于全局配置-->
        <profile>
            <!--子选项标识 使用时 通过 -P输入-->
            <id>local</id>
            <properties>
                <env>local</env>
                <!--日志目录-->
                <logPath>${basedir}\logs</logPath>
                <!--日志级别-->
                <logLevel>DEBUG</logLevel>
                <!--                是否展示sql-->
                <show.sql>true</show.sql>
            </properties>
            <!--子选项额外配置-->
            <activation>
                <!--是否激活 默认false 不激活 true 激活-->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <env>test</env>
                <!--日志目录-->
                <logPath>/data/logs</logPath>
                <!--日志级别-->
                <logLevel>INFO</logLevel>
                <!--                是否展示sql-->
                <show.sql>false</show.sql>
            </properties>
        </profile>
    </profiles>
    <build>
        <!--指定最终打包后文件名-->
        <finalName>${project.name}</finalName>
        <!--打包文件存放地址 ${basedir} pom文件所在文件夹-->
        <directory>${project.basedir}\target</directory>
        <!--待过滤属性文件列表-->
        <filters>
            <!--单个过滤属性文件-->
            <filter>${project.basedir}\src\main\resources\config\global.properties</filter>
        </filters>
        <!--资源文件打包配置列表-->
        <resources>
            <!--单个配置-->
            <resource>
                <!--默认false 是否执行maven过滤替换-->
                <filtering>true</filtering>
                <!--指定资源文件目录-->
                <directory>${project.basedir}\src\main\resources</directory>
                <!--资源排除项列表-->
                <excludes>
                    <!--单项配置-->
                    <exclude>config/**</exclude>
                    <exclude>bootstrap.yml</exclude>
                </excludes>
                <!--资源载入项列表-->
                <includes>
                    <!--载入当前目录所有文件-->
                    <include>*</include>
                    <!--载入views/目录下所有文件-->
                    <include>views/**</include>
                    <!--载入当前目录下jdbc目录指定文件-->
                    <include>jdbc/${env}.properties</include>
                    <!--载入当前目录下redis目录指定文件-->
                    <include>redis/${env}.properties</include>
                </includes>
            </resource>
        </resources>
        <!--插件列表-->
        <plugins>
            <!--spring boot 打包插件-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>